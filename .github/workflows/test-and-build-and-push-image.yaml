name: Deploy To Server VPS
on:
  push:
    branches:
      - main 
jobs:
  build-and-push-image:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - dockerfile: ./deployment/app/Dockerfile
            image: ghcr.io/ibrahim4529/todo-action-server

          - dockerfile: ./deployment/nginx/Dockerfile
            image: ghcr.io/ibrahim4529/todo-action-nginx
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v2
      - name: Set Build .env
        run: 'echo "ENV_HERE=TODO" > .env'
      - name: Set up Python 3.10 if is metrix dockerfile is ./deployment/app/Dockerfile
        uses: actions/setup-python@v4
        with:
          python-version: '3.10' 
        if: matrix.dockerfile == './deployment/app/Dockerfile'
      - name: Install Pip Dependencies
        run: |
          pip install -r requirements.txt
        shell: bash
        working-directory: ./server_app
        if: matrix.dockerfile == './deployment/app/Dockerfile'
      - name: Test Using Pytest
        run: |
          pytest
        shell: bash
        working-directory: ./server_app
        if: matrix.dockerfile == './deployment/app/Dockerfile'
      - name: Login To Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
        with:
          images: ${{ matrix.image }}
      - name: Build and push Docker images
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ${{ matrix.dockerfile }}
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
  ssh-deploy:
    needs: build-and-push-image
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v2
      - name: Copy docker compose file using scp action
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.SSH_KEY }}
          port: ${{ secrets.PORT }}
          source: "deployment/docker-compose.yaml"
          target: /home/${{ secrets.USERNAME }}/todo-app
      - name: Docker Compose Up Using SSH action
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.SSH_KEY }}
          port: ${{ secrets.PORT }}
          script: |
            cd /home/${{ secrets.USERNAME }}/todo-app
            docker-compose pull
            docker-compose up -d